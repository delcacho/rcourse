library("rmarkdown");
render("template.Rmd","html_document");
quit()
install.packages("materializeR")
install.pckages("httr")
install.packages("httr")
install.packages("XML")
install.packages("jsonlite")
install.packages("quantmod")
install.packages("Rsymphony")
install.packages("Rsymphony")
install.packages("Rsymphony", configure.args="--with-SYMPHONY-include=/Users/timo/Applications/symphony/include/ --with-SYMPHONY-lib=/Users/timo/Applications/symphony/lib",type="source")
install.packages("Rsymphony")
install.packages("Rsymphony", configure.args="--with-SYMPHONY-include=/Users/timo/Applications/symphony/include/ --with-SYMPHONY-lib=/Users/timo/Applications/symphony/lib",type="source")
quit()
install.packages("flexdashboard")
install.packages(c("sqldf","magrittr","highcharter","DT"))
install.packages(c("sqldf", "magrittr", "highcharter", "DT"))
install.packages("rCharts")
install.packages("rCharts",type="source")
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("materializeR")
install.packages("materializeR")
install_github("timelyportfolio/materializeR")
v <- 1:100
v
v[94]
v[v < 25]
v <- v[v >= 25]
v
25 %% 5
25 %% 2
25 %/% 2
v %% 2
v[v %% 2 == 0]
v <- v[v %% 2 == 0]
array(v,dim=c(5,5))
1:100 %/% 2
1:100 %% 2
1:100 %% 3
1:100 & 1
1:100 && 1
library(datasets)
Nile
?Nile
hist(Nile)
Nile
library(datasets)
ls("package:datasets")
?USArrests
head(USArrests)
colnames(USArrests)
rownames(USArrests)
ls("package:stats")
?runif
ls("package:stats") == "runif"
table(ls("package:stats") == "runif")
result <- hist(Nile)
summary(result)
result <- hist(Nile)
result$breaks
result$counts
summary(result)
?hist
??hist
result
result[1]
class(result[1])
class(result[[1]])
class(result[1][1])
class(result[[1]]
result[1]
result[1][1]
result[[1]]
mode(result[[1]])
result
result$breaks
class(result$breaks)
result[[1]]
result[[1:5]]
result[[1:2]]
result[1:2]
result[[1:2]]
means(result[[1]])
mean(result[[1])
mean(result[[1]])
mean(result[1])
mean(result[[1]])
as.character(result[[1]])
mean(as.character(result[[1]]))
c("400",seq(500,1300,100))
list("400",seq(500,1300,100))
mean(list("400",seq(500,1300,100)))
c(list(1,2,3),4)
a <- c(list(1,2,3),4)
a
a[3] <- NULL
a
a <- c(list(1,2,3),4)
a
a[3] <- NULL
a
a <- c(1,2,3,4)
a
a[3] <- NULL
a <- c(1,2,3,,4)
a <- c(1,2,3,4)
a
a <- list(1,2,3,4)
a
a[[3]] <- NULL
a
a[4] <- a[3]
a
a[3] <- 3
a
a[3] <- NULL
c(a[1:2],3,a[3])
a <- c(1,2,3,4,5)
a[-3]
a
c(list(1,2,3),c(4,5))
list(list(1,2,3),c(4,5))
person <- list(name="George",surname="Bush")
person
person$middle <- "Walter"
person
person[3]
person["middle"]
person[[3]]
person[c("name","middle","surname")]
person$middle <- "Walter"
Walter
ls()
person[c("name","middle","surname")]
?append
person <- list(name="George",surname="Bush")
person <- append(person,list(middle="Walter"),1)
person
person <- append(person,list(middle="Walter"),3)
person
person <- list(name="George",surname="Bush")
person <- append(person,list(middle="Walter"),2)
person
data.frame(name="George",surname="Bush")
data.frame(name=c("George","Hillary",surname=c("Bush","Clinton"))
)
data.frame(name=c("George","Hillary"),surname=c("Bush","Clinton"))
data.frame(name=c("George","Hillary"),surname=c("Bush","Clinton","Trump"))
data.frame(name=c("George","Hillary",NA),surname=c("Bush","Clinton",NA))
df <- data.frame(name=c("George","Hillary",NA),surname=c("Bush","Clinton",NA))
is.na(df)
omit.na(df)
?omit.na
??omit.na
is.na(df)
complete.cases(df)
df[3,"surname"] <- "Trump"
df[3,"surname"] <- "Trump"
str(df)
df[,"surname"] <- as.acharacter(df[,"surname"])
df[,"surname"] <- as.character(df[,"surname"])
df
str(df)
df$name <- as.character(df$name)
df
df[3,"surname"] <- "Trump"
df
complete.cases(df)
is.na(df)
any(is.na(df))
)
df[complete.cases(df),]
getwd()
setwd("rcourse")
df <- read.csv("germancredit.csv",sep=",",stringsAsFactors=FALSE)
head(df)
str(df)
df[complete.cases(df),]
df[complete.cases(df),]
df[,]
df[1,]
df[,1]
head(df)
head(df)
tail(df)
summary(df)
df <- data.frame(age=c(22,56,11,14),name=c("John","Mary","Susan","Pete"))
df
df[1]
df[,1]
df <- data.frame(age=c(22,56,11,14),name=c("John","Mary","Susan","Pete"))
df["age"]
mean(df["age"])
mean(df[["age"]])
as.numeric(df["age"])
df <- data.frame(age=c(22,56,11,14),name=c("John","Mary","Susan","Pete"))
df
df[,]
df[,1:2]
df[,c("age","name")]
df[3,"name"]
df[3,"name"] <- "Katherine"
levels(df$name)
levels(df$name) <- c("John","Mary","Pete","Katherine")
df
df$name
df[3,"name"]
df[3,"name"] <- "Katherine"
df
df[c(1,3),]
df[c(1,3),2]
df[c(1,3),"age"]
df[c(1,3),"age"] <- 30
df[c(1,3),"age"] <- c(30,30)
df
levels(df$name)
df[1,"name"] <- "Carol"
df
df[1,"name"] <- "John"
df
df[1,"name"] <- "Carol"
df
levels(df$name)
levels(df$name) <- c("Carol","Mary","Pete","Katherine")
df
df[c(1,3),"age"] <- c(30,30)
df
df <- c(df,surname=c("Smith","Jones","Trump","Bush"))
df
df <- data.frame(age=c(22,56,11,14),name=c("John","Mary","Susan","Pete"))
df
df[,3] <- c("Smith","Jones","Trump","Bush")
df
names(df)
levels(df$name)
names(df) <- c("age","name","surname")
df
df[,1:2]
df <- df[,1:2]
df
df$surname <- c("age","name","surname")
df$surname <- c("Smith","Jones","Trump","Bush")
df
names(df)[3] <- c("age","name","surname")
names(df)
names(df)[3] <- c("surname")
names(df)
names(df)[3] <- c("surname")
names(df)[3] <- "surname"
df
str(df)
class(df)
class(df$age)
?data.frame
df$newfield <- c("John","Pete")
df <- data.frame(age=c(22,56,11,14),name=c("John","Mary","Susan","Pete"),stringsAsFactors=FALSE)
str(df)
df
df$name = c("Pete","Pete","Susan","Susan")
df
table(df$name)
df
head(age)
head(df)
data <- read.csv("germancredit.csv",sep=",")
install.packages("microbenchmark")
library("microbenchmark")
microbenchmark(read.csv("germancredit.csv",sep=","))
data <- read.csv("germancredit.csv",sep=",")
microbenchmark(read.csv("germancredit.csv",sep=","))
install.packages("data.table")
library("data.table")
microbenchmark(fread("germancredit.csv",sep=","))
data <- fread("germancredit.csv",sep=",")
head(data)
str(data)
quit()
